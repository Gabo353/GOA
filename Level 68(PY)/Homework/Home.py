#1. რიცხვების გაორმაგება
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს რიცხვს და აბრუნებს მის გაორმაგებულ მნიშვნელობას.  
#
#2. სტრინგის სიგრძის გამოთვლა
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს სტრინგს და აბრუნებს მის სიმბოლოების რაოდენობას.  
#
#3. კენტ და ლუწი რიცხვების ამოცნობა
#   დაწერეთ lambda-ფუნქცია, რომელიც ამოწმებს, რიცხვი კენტია თუ არა.  
#
#4. რიცხვების კვადრატში აყვანა
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს რიცხვს და აბრუნებს მის კვადრატს.  
#
#5. ლუწი რიცხვების კვადრატში აყვანა სიიდან
#   დაწერეთ ფუნქცია, რომელიც lambda-ფუნქციას გამოიყენებს, რათა სიიდან ლუწი რიცხვები ამოარჩიოს და თითოეული მათგანი კვადრატში აიყვანოს.



#1
#რიცხვების გაორმაგება
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს რიცხვს და აბრუნებს მის გაორმაგებულ მნიშვნელობას.  


nums = lambda n1 : n1*2
print(nums(2))

print('--------------------------')

#2
#სტრინგის სიგრძის გამოთვლა
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს სტრინგს და აბრუნებს მის სიმბოლოების რაოდენობას.

str = lambda str1 : len(str1)
print(str('hello'))

print('--------------------------')

#3
#კენტ და ლუწი რიცხვების ამოცნობა
#   დაწერეთ lambda-ფუნქცია, რომელიც ამოწმებს, რიცხვი კენტია თუ არა. 

check = lambda x : 'Even' if x % 2 == 0 else 'Odd'
print(check(4))

print('--------------------------')

#4. რიცხვების კვადრატში აყვანა
#   დაწერეთ lambda-ფუნქცია, რომელიც იღებს რიცხვს და აბრუნებს მის კვადრატს.  

squear = lambda x : x**2
print(squear(3))

print('--------------------------')

#5. ლუწი რიცხვების კვადრატში აყვანა სიიდან
#   დაწერეთ ფუნქცია, რომელიც lambda-ფუნქციას გამოიყენებს, რათა სიიდან ლუწი რიცხვები ამოარჩიოს და თითოეული მათგანი კვადრატში აიყვანოს.

arr = [1,2,3,4,5]
checking = lambda c : c ** 2 if c % 2 == 0 else c
print([checking(i) for i in arr])
